# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    ports:
      - 5000:8080




# version: '3.8'

# services:
#   eduspaceengine:
#     container_name: eduspace-web-api-container
#     image: nikoloza022/eduspace-api
#     build:
#       context: .
#       dockerfile: Dockerfile
#     environment:
#       - MSSQL_SA_PASSWORD=Password1*
#       - AppSettings__Token=APH3x8L9XdyIVsZ-x-AI6=1HZYtriG!-WHK=DeFEjTktnwb!HK1pqDoLDFePhB-uYm06bKIVSqugYWhc83cO1xKO=v?3JRlkPXYBR?aP5Lg-YIqlAKQ200ZN/Aj1ZU!x?GGpuqIs6rLNcSsx!ETliY?R-TuIX4iI4RYelU=TwaCO3K3DcbMM?eTY3kKJsOzfYnva8sH4YRbXD?C0OC?y2e-?g8o6UDrBE19Y01E68lzsgKjxE5O0/=H?te?UlijK
#     ports:
#       - "5000:8080"
#     depends_on:
#       - eduspace-sqlserver   
#   eduspace-sqlserver:
#     container_name: eeduspace-sqlserver-container
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     environment:
#       - ACCEPT_EULA=Y
#       - MSSQL_SA_PASSWORD=Password1*
#     ports:
#       - "1433:1433"

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

