// <auto-generated />
using System;
using EduSpaceEngine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduSpaceEngine.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.CourseEnrollmentModel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseEnroll");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.CourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseLogo")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName_en")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName_ka")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description_en")
                        .HasColumnType("longtext");

                    b.Property<string>("Description_ka")
                        .HasColumnType("longtext");

                    b.Property<string>("FormattedCourseName")
                        .HasColumnType("longtext");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("LevelId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.LessonModel", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<string>("LessonName_en")
                        .HasColumnType("longtext");

                    b.Property<string>("LessonName_ka")
                        .HasColumnType("longtext");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.LevelModel", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("Description_en")
                        .HasColumnType("longtext");

                    b.Property<string>("Description_ka")
                        .HasColumnType("longtext");

                    b.Property<string>("LevelName_en")
                        .HasColumnType("longtext");

                    b.Property<string>("LevelName_ka")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoURL")
                        .HasColumnType("longtext");

                    b.HasKey("LevelId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.ProgressModel", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<bool>("Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProgressId");

                    b.HasIndex("CourseId");

                    b.HasIndex("LessonId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Progress");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.SubjectModel", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description_en")
                        .HasColumnType("longtext");

                    b.Property<string>("Description_ka")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoURL")
                        .HasColumnType("longtext");

                    b.Property<string>("SubjectName_en")
                        .HasColumnType("longtext");

                    b.Property<string>("SubjectName_ka")
                        .HasColumnType("longtext");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.LearnModel", b =>
                {
                    b.Property<int>("LearnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LearnId"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LearnName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int?>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("LearnId");

                    b.HasIndex("LessonId");

                    b.HasIndex("TestId")
                        .IsUnique();

                    b.ToTable("Learn");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.TestAnswerModel", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("TestId");

                    b.ToTable("TestAnswers");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.TestModel", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TestId"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Hint")
                        .HasColumnType("longtext");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LearnId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TestId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.VideoModel", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("LearnId")
                        .HasColumnType("int");

                    b.Property<string>("VideName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VideoId");

                    b.HasIndex("LearnId")
                        .IsUnique();

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.CommentModel", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("longtext");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.NotificationModel", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("CommentAuthorPicture")
                        .HasColumnType("longtext");

                    b.Property<string>("CommentAuthorUsername")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.PostModel", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("longtext");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.User.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OAuthProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("OAuthProviderId")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.CourseEnrollmentModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.CourseModel", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduSpaceEngine.Model.User.UserModel", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.CourseModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.LevelModel", "Level")
                        .WithMany("Courses")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.LessonModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.SubjectModel", "Subject")
                        .WithMany("Lessons")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.ProgressModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.CourseModel", "Course")
                        .WithMany("Progresses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduSpaceEngine.Model.Learn.LessonModel", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduSpaceEngine.Model.Learn.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduSpaceEngine.Model.User.UserModel", "User")
                        .WithMany("Progresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lesson");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.SubjectModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.CourseModel", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.LearnModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.LessonModel", "Lesson")
                        .WithMany("LearnMaterial")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduSpaceEngine.Model.Learn.Test.TestModel", "Test")
                        .WithOne("Learn")
                        .HasForeignKey("EduSpaceEngine.Model.Learn.Test.LearnModel", "TestId");

                    b.Navigation("Lesson");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.TestAnswerModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.Test.TestModel", "Test")
                        .WithMany("Answers")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.VideoModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Learn.Test.LearnModel", "Learn")
                        .WithOne("Video")
                        .HasForeignKey("EduSpaceEngine.Model.Learn.Test.VideoModel", "LearnId");

                    b.Navigation("Learn");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.CommentModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.Social.PostModel", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("EduSpaceEngine.Model.User.UserModel", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.NotificationModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.User.UserModel", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.PostModel", b =>
                {
                    b.HasOne("EduSpaceEngine.Model.User.UserModel", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.CourseModel", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Progresses");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.LessonModel", b =>
                {
                    b.Navigation("LearnMaterial");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.LevelModel", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.SubjectModel", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.LearnModel", b =>
                {
                    b.Navigation("Video")
                        .IsRequired();
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Learn.Test.TestModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Learn");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.Social.PostModel", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("EduSpaceEngine.Model.User.UserModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Enrollments");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");

                    b.Navigation("Progresses");
                });
#pragma warning restore 612, 618
        }
    }
}
